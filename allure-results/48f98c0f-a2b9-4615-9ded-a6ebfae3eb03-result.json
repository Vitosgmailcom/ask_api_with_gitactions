{"name": "test_activate_user", "status": "broken", "statusDetails": {"message": "KeyError: 'db_user'", "trace": "@pytest.mark.newuser\n    @pytest.mark.tcid12\n    def test_activate_user():\n        email = test_signup_as_student().get('email')\n        message = 'User was activated'\n>       exec_db = UserHelperDB().get_activation_code_from_DB(email)\n\ntests/API_REG_TESTS/Authorization_API_test.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc/Helper/userHelperDB.py:8: in __init__\n    self.execute = ConnectDAO()\nsrc/DAO/connectDAO.py:8: in __init__\n    self.cred = credentialsDB()\nsrc/Utility/credentialsDB.py:5: in credentialsDB\n    db_user = os.environ['db_user']\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = environ({'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'NVM_INC': '/home/vitalykamynin/.config/nvm/versions/node/v20....s/venv/bin/pytest', 'PYTEST_CURRENT_TEST': 'tests/API_REG_TESTS/Authorization_API_test.py::test_activate_user (call)'})\nkey = 'db_user'\n\n    def __getitem__(self, key):\n        try:\n            value = self._data[self.encodekey(key)]\n        except KeyError:\n            # raise KeyError with the original key value\n>           raise KeyError(key) from None\nE           KeyError: 'db_user'\n\n/usr/lib/python3.9/os.py:679: KeyError"}, "steps": [{"name": "Status code:200", "status": "passed", "start": 1712632968175, "stop": 1712632968176}, {"name": "Expected message: User was created", "status": "passed", "start": 1712632968176, "stop": 1712632968176}, {"name": "Connect to DB", "status": "broken", "statusDetails": {"message": "KeyError: 'db_user'\n", "trace": "  File \"/home/vitalykamynin/Projects/ask_api_with_gitactions/src/Helper/userHelperDB.py\", line 8, in __init__\n    self.execute = ConnectDAO()\n  File \"/home/vitalykamynin/Projects/ask_api_with_gitactions/src/DAO/connectDAO.py\", line 8, in __init__\n    self.cred = credentialsDB()\n  File \"/home/vitalykamynin/Projects/ask_api_with_gitactions/src/Utility/credentialsDB.py\", line 5, in credentialsDB\n    db_user = os.environ['db_user']\n  File \"/usr/lib/python3.9/os.py\", line 679, in __getitem__\n    raise KeyError(key) from None\n"}, "start": 1712632968176, "stop": 1712632968176}], "attachments": [{"name": "log", "source": "ff628401-f573-46f5-951a-8471adb77cf6-attachment.txt", "type": "text/plain"}], "start": 1712632967193, "stop": 1712632968186, "uuid": "b6e2b977-d27b-4ddb-a1e3-e7ad7e88e737", "historyId": "97557a37ef6dbde7c854b44fd1b82887", "testCaseId": "97557a37ef6dbde7c854b44fd1b82887", "fullName": "tests.API_REG_TESTS.Authorization_API_test#test_activate_user", "labels": [{"name": "tag", "value": "tcid12"}, {"name": "tag", "value": "newuser"}, {"name": "parentSuite", "value": "tests.API_REG_TESTS"}, {"name": "suite", "value": "Authorization_API_test"}, {"name": "host", "value": "penguin"}, {"name": "thread", "value": "3540-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.API_REG_TESTS.Authorization_API_test"}]}